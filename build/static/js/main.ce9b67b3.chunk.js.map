{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/Contact.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","styles","map","contact","ContactList_item","name","number","ContactList_button","type","onClick","id","Filter","value","onChangeFilter","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","ContactEditor","onSubmit","this","ContactEditor_label","ContactEditor_input","ContactEditor_button","Component","App","filter","addContact","task","cont","includes","alert","length","shortid","generate","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce9b67b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3RDbU\",\"ContactList_item\":\"ContactList_ContactList_item__eADIH\",\"completed\":\"ContactList_completed__2JuNU\",\"ContactList_text\":\"ContactList_ContactList_text__3a8ak\",\"ContactList_actions\":\"ContactList_ContactList_actions__Piwjs\",\"ContactList_button\":\"ContactList_ContactList_button__2CaXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactEditor\":\"Contact_ContactEditor__2o8yq\",\"ContactEditor_label\":\"Contact_ContactEditor_label__2kVqt\",\"ContactEditor_input\":\"Contact_ContactEditor_input__1FsLJ\",\"ContactEditorinput\":\"Contact_ContactEditorinput__3YzEN\",\"ContactEditor_button\":\"Contact_ContactEditor_button__3_GlS\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.ContactList}>\r\n    {contacts.map((contact) => (\r\n      <li className = {styles.ContactList_item}key={contact.id}>\r\n        {contact.name + \":\" + contact.number}\r\n        {\r\n          <button\r\n            className={styles.ContactList_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n}\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Contact.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.ContactEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.ContactEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.ContactEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.ContactEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.ContactEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.ContactEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};","import React, { Component } from \"react\";\nimport shortid from 'shortid';\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: '',\n    number: ''\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: shortid.generate(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"Container\">\n        <div className=\"Container2\">\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n        </div>\n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}